@page "/{id:int?}"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@inject RecipeDbContext context;
@inject NavigationManager NavigationalManager;
<PageTitle>Recipes</PageTitle>
<RecipeDetailsModal Recipe="recipe" Callback="ClearRecipe"
    style="position:absolute;top:50vh;left:50vw;transform:translate(-50%,-50%)" />
<h1 class="text-center">Recipes</h1>
<div class="button-list mx-5 px-5">
    <div id="create-button">
        <NavLink href="/create-recipe">+</NavLink>
    </div>
    <button id="random-recipe">
        Random
    </button>
    <div id="search-container">
        <input class="bg-light m-3 px-3 search w-10" type="text" @bind-value="searchTerm" @oninput="UpdateFiltered"
            placeholder="Search..." />
    </div>
    <NavLink id="seasonal-map" href="/seasonal-map">Seasonal Map</NavLink>
</div>
<RecipeCardList searchTerm="@searchTerm" OnClickCallback="@((Recipe recipe)=>ShowDetails(recipe))" />
@code {
    [Parameter] public int? id { get; set; }
    string? searchTerm { get; set; }
    Recipe? recipe { get; set; }
    void UpdateFiltered(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString();
    }
    void ShowDetails(Recipe? recipe) => this.recipe = recipe;
    void ClearRecipe() => recipe = null;
}
<style>
    body {
        --inner-shadow: 0 0 5px #000 inset, 0 0 5px #fff inset;
        --yellow-pastel: #ffaa;
        background: conic-gradient(#faa, #aaf, #afa, #faf, #faa) fixed;
        backdrop-filter: blur(50px);
        display: flex;
        color: hsl(@(360 * 0.75)deg, 100%, 70%);
    }

    #create-button {
        background-color: var(--yellow-pastel);
        border-radius: 10rem;
        box-shadow: 2px 5px 5px #ffca inset, -2px -5px 5px #0002 inset;
        color: inherit;
        display: flex;
        font-size: 2rem;
        height: 4rem;
        padding-bottom: .2rem;
        place-content: center;
        place-items: center;
        width: 4rem;

        a {
            color: inherit;
            display: flex;
            height: 100%;
            place-content: center;
            place-items: center;
            text-decoration: none;
            width: 100%;
        }
    }

    #random-recipe {
        background-color: var(--yellow-pastel);
        border-radius: 10rem;
        border: none;
        box-shadow: 2px 5px 5px #ffca inset, -2px -5px 5px #0002 inset;
        color: inherit;
        font-size: 2rem;
        height: 4rem;
        padding-bottom: .2rem;
        padding-inline: 2rem;
        width: fit-content;
    }

    #search-container {
        background-color: var(--yellow-pastel);
        border-radius: 10rem;
        box-shadow: 2px 5px 5px #ffca inset, -2px -5px 5px #0002 inset;
    }

    #seasonal-map {
        background-color: var(--yellow-pastel);
        border-radius: 10rem;
        box-shadow: 2px 5px 5px #ffca inset, -2px -5px 5px #0002 inset;
        color: inherit;
        display: flex;
        font-size: 2rem;
        height: 4rem;
        padding-inline: 2rem;
        place-items: center;
        text-decoration: none;
        width: fit-content;
    }

    .button-list {
        display: flex;
        flex-wrap: wrap;
        place-content: space-evenly;
        place-items: center;
    }

    .recipe-inner-inner {
        border-radius: 2rem;
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        height: 100%;
        justify-content: center;
        padding-block: 2rem;
        width: 100%;
    }

    .search {
        border-radius: 10rem;
        border: none;
        box-shadow: var(--inner-shadow);
        display: flex;
        font-size: 1.5rem;
        height: 40px;
        place-content: center;
        place-items: center;
        place-self: center;
    }
</style>